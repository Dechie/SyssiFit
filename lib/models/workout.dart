import 'package:sissifit/models/exercise.dart';
import 'package:sissifit/models/workout_set.dart';

class Workout {
  // Note: The 'id' might not be needed here if embedded in LoggedSession
  // final String id; // Unique identifier (Firebase document ID if it were a subcollection)
  final String exerciseId; // Link to the Exercise template
  final String title; // Added title for easier UI display
  List<WorkoutSet> sets; // Data recorded by the user

  Workout({
    // required this.id,
    required this.exerciseId,
    required this.title, // Include title in the constructor
    required this.sets,
  });

  // Factory method to create a Workout object from an Exercise template
  // Used when starting a session based on a category
  factory Workout.fromExercise(Exercise exercise) {
    return Workout(
      // id: '', // ID will be generated by Firestore if needed, or not used if embedded
      exerciseId: exercise.id,
      title: exercise.name, // Populate title from exercise name
      sets: [], // Start with an empty list of sets
    );
  }

  // Method to convert Workout object to a Map for Firestore
  Map<String, dynamic> toJson() {
    return {
      // 'id': id, // Don't store ID if embedded
      'exerciseId': exerciseId,
      'title': title, // Include title in toJson
      'sets': sets.map((set) => set.toJson()).toList(), // Convert list of Sets to list of Maps
    };
  }

  // Factory method to create a Workout object from a Firestore Map
  factory Workout.fromJson(Map<String, dynamic> json) {
    return Workout(
      // id: json['id'] as String, // Don't read ID if embedded
      exerciseId: json['exerciseId'] as String,
      title: json['title'] as String, // Read title from json
      sets: (json['sets'] as List<dynamic>)
          .map((setJson) => WorkoutSet.fromJson(setJson as Map<String, dynamic>))
          .toList(),
    );
  }
}